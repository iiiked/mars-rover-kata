html {
  box-sizing: border-box;
}

body {
  --grid-x-size: 10;
  --grid-y-size: 10;
}

*,
*::after,
*::before {
  box-sizing: inherit;
}

.content-box {
  box-sizing: content-box;
}

.flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

.flex-row {
  display: flex;
}

.grid-container {
  width: 100vh;
  height: 100vh;
}

.controls-container {
  min-width: 320px;
  width: calc(100vw - 100vh);
  height: 100vh;
  background:#fdfdfd;
  border-left: 6px solid $mars;
}

.grid-container {
  background: $mars-land;
  padding: .5em;
}

.grid {
  display: grid;
  width: 100%;
  height: 100%;
  grid-template-columns: repeat(var(--grid-y-size), 1fr);
  grid-template-rows: repeat(var(--grid-x-size), 1fr);
}

.grid-cell {
  position: relative;
  border: 1px dashed $mars;
  font-size: calc(var(--text-md) / var(--grid-x-size) * 10);
}

.stuck {
  background: rgba(255, 60, 35, .5);
}

.won {
  background: rgba(60, 255, 35, .25);
}

.x {
  background: $mars-obstacle;
  &::after {
    content: 'X';
    font-weight: 700;
    color: $mars;
    font-size: calc(var(--text-xxl) / var(--grid-x-size) * 10);
    text-align: center;
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
  }
}

.listen {
  &:hover {
    cursor: pointer;
    box-shadow: 0 4px 8px -4px rgba(0, 0, 0, .35);
    background: $mars-pointer;
  }
}